-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Fly Vars
local velocityHandlerName = "FlyVelocity_"..math.random(1000,9999)
local gyroHandlerName = "FlyGyro_"..math.random(1000,9999)
local flying = false
local flySpeed = 100
local flyToggled = false

-- WalkSpeed Vars
local speedToggled = false
local userWalkSpeed = 16

-- Helpers
local function getRoot(char)
    return char and char:FindFirstChild("HumanoidRootPart")
end

-- Fly Functions
local function startFly()
    if flying then return end
    local char = LocalPlayer.Character
    local root = getRoot(char)
    if not root then return end
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    flying = true
    local camera = workspace.CurrentCamera

    hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
    hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
    hum:ChangeState(Enum.HumanoidStateType.Physics)

    local bv = Instance.new("BodyVelocity")
    bv.Name = velocityHandlerName
    bv.MaxForce = Vector3.new(9e9,9e9,9e9)
    bv.Velocity = Vector3.zero
    bv.Parent = root

    local bg = Instance.new("BodyGyro")
    bg.Name = gyroHandlerName
    bg.MaxTorque = Vector3.new(9e9,9e9,9e9)
    bg.P = 1000
    bg.D = 50
    bg.Parent = root

    local controlModule = require(LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
    RunService.RenderStepped:Connect(function()
        if not flying or not root or not bv or not bg then return end
        local moveDir = controlModule:GetMoveVector()
        bg.CFrame = camera.CFrame

        local vel = Vector3.zero
        if moveDir.Magnitude > 0 then
            vel = (camera.CFrame.RightVector * moveDir.X + camera.CFrame.LookVector * -moveDir.Z) * flySpeed
        end
        bv.Velocity = vel

        if hum then hum:ChangeState(Enum.HumanoidStateType.Physics) end
    end)
end

local function stopFly()
    flying = false
    local char = LocalPlayer.Character
    if char then
        local root = getRoot(char)
        if root then
            if root:FindFirstChild(velocityHandlerName) then root[velocityHandlerName]:Destroy() end
            if root:FindFirstChild(gyroHandlerName) then root[gyroHandlerName]:Destroy() end
        end
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
            hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
            hum:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
            hum:ChangeState(Enum.HumanoidStateType.GettingUp)
            hum.WalkSpeed = userWalkSpeed
        end
    end
end

-- GUI
local function createGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CustomMenu"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local MainFrame = Instance.new("Frame", ScreenGui)
    MainFrame.Size = UDim2.new(0,250,0,350)
    MainFrame.Position = UDim2.new(0.5,-125,0.3,0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(240,240,240)
    MainFrame.Active = true
    MainFrame.Draggable = true
    local corner = Instance.new("UICorner", MainFrame)
    corner.CornerRadius = UDim.new(0,15)

    local TitleBar = Instance.new("Frame", MainFrame)
    TitleBar.Size = UDim2.new(1,0,0,40)
    TitleBar.BackgroundTransparency = 1

    local VersionLabel = Instance.new("TextLabel", TitleBar)
    VersionLabel.Size = UDim2.new(0.5,0,1,0)
    VersionLabel.Position = UDim2.new(0,10,0,0)
    VersionLabel.Text = "Versi: 0.0.1"
    VersionLabel.Font = Enum.Font.GothamBold
    VersionLabel.TextColor3 = Color3.fromRGB(50,50,50)
    VersionLabel.TextScaled = true
    VersionLabel.BackgroundTransparency = 1
    VersionLabel.TextXAlignment = Enum.TextXAlignment.Left

    local MinBtn = Instance.new("TextButton", TitleBar)
    MinBtn.Size = UDim2.new(0,40,0,25)
    MinBtn.Position = UDim2.new(1,-45,0.5,-12)
    MinBtn.Text = "🏠"
    MinBtn.Font = Enum.Font.GothamBold
    MinBtn.TextScaled = true
    MinBtn.TextColor3 = Color3.fromRGB(255,255,255)
    MinBtn.BackgroundColor3 = Color3.fromRGB(200,100,200)
    local minCorner = Instance.new("UICorner", MinBtn)
    minCorner.CornerRadius = UDim.new(0,6)

    local BackBtn = Instance.new("TextButton", TitleBar)
    BackBtn.Size = UDim2.new(0,40,0,25)
    BackBtn.Position = UDim2.new(1,-90,0.5,-12)
    BackBtn.Text = "👈"
    BackBtn.Font = Enum.Font.GothamBold
    BackBtn.TextScaled = true
    BackBtn.TextColor3 = Color3.fromRGB(255,255,255)
    BackBtn.BackgroundColor3 = Color3.fromRGB(200,100,200)
    local backCorner = Instance.new("UICorner", BackBtn)
    backCorner.CornerRadius = UDim.new(0,6)
    BackBtn.Visible = false

    local OpenLogo = Instance.new("TextButton", ScreenGui)
    OpenLogo.Size = UDim2.new(0,50,0,50)
    OpenLogo.Position = UDim2.new(0,20,0.5,-25)
    OpenLogo.Text = "🏠"
    OpenLogo.TextScaled = true
    OpenLogo.BackgroundColor3 = Color3.fromRGB(200,100,200)
    local logoCorner = Instance.new("UICorner", OpenLogo)
    logoCorner.CornerRadius = UDim.new(0,12)
    OpenLogo.Visible = false

    MinBtn.MouseButton1Click:Connect(function()
        MainFrame.Visible = false
        OpenLogo.Visible = true
    end)
    OpenLogo.MouseButton1Click:Connect(function()
        MainFrame.Visible = true
        OpenLogo.Visible = false
    end)

    local MenuFrame = Instance.new("Frame", MainFrame)
    MenuFrame.Size = UDim2.new(1,0,1,0)
    MenuFrame.BackgroundTransparency = 1

    local FlyFrame = Instance.new("Frame", MainFrame)
    FlyFrame.Size = UDim2.new(1,0,1,0)
    FlyFrame.BackgroundTransparency = 1
    FlyFrame.Visible = false

    local SpeedFrame = Instance.new("Frame", MainFrame)
    SpeedFrame.Size = UDim2.new(1,0,1,0)
    SpeedFrame.BackgroundTransparency = 1
    SpeedFrame.Visible = false

    local function makeButton(parent,text,yPos)
        local btn = Instance.new("TextButton", parent)
        btn.Size = UDim2.new(0.85,0,0,50)
        btn.Position = UDim2.new(0.5,-100,0,yPos)
        btn.Text = text
        btn.Font = Enum.Font.GothamBold
        btn.TextScaled = true
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.BackgroundColor3 = Color3.fromRGB(50,50,150)
        local corner = Instance.new("UICorner",btn)
        corner.CornerRadius = UDim.new(0,12)
        return btn
    end

    local FlyBtn = makeButton(MenuFrame,"TERBANG",60)
    local SpeedBtn = makeButton(MenuFrame,"SPEED",140)
    local CmdsBtn = makeButton(MenuFrame,"CMDS BAR",220)

    -- === FlyFrame Buttons ===
    local FlyToggleBtn = Instance.new("TextButton", FlyFrame)
    FlyToggleBtn.Size = UDim2.new(0.85,0,0,50)
    FlyToggleBtn.Position = UDim2.new(0.5,-100,0,60)
    FlyToggleBtn.Text = "ON / OFF FLY"
    FlyToggleBtn.Font = Enum.Font.GothamBold
    FlyToggleBtn.TextScaled = true
    FlyToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
    FlyToggleBtn.BackgroundColor3 = Color3.fromRGB(50,50,150)
    local flyCorner = Instance.new("UICorner", FlyToggleBtn)
    flyCorner.CornerRadius = UDim.new(0,12)

    local FlySpeedInput = Instance.new("TextBox", FlyFrame)
    FlySpeedInput.Size = UDim2.new(0.85,0,0,50)
    FlySpeedInput.Position = UDim2.new(0.5,-100,0,130)
    FlySpeedInput.PlaceholderText = "Masukkan Fly Speed"
    FlySpeedInput.Text = tostring(flySpeed)
    FlySpeedInput.TextScaled = true
    FlySpeedInput.ClearTextOnFocus = false
    FlySpeedInput.BackgroundColor3 = Color3.fromRGB(220,220,220)
    FlySpeedInput.TextColor3 = Color3.fromRGB(0,0,0)
    local flySpeedCorner = Instance.new("UICorner", FlySpeedInput)
    flySpeedCorner.CornerRadius = UDim.new(0,12)

    local FlyApplyBtn = Instance.new("TextButton", FlyFrame)
    FlyApplyBtn.Size = UDim2.new(0.85,0,0,50)
    FlyApplyBtn.Position = UDim2.new(0.5,-100,0,200)
    FlyApplyBtn.Text = "APPLY FLY SPEED"
    FlyApplyBtn.Font = Enum.Font.GothamBold
    FlyApplyBtn.TextScaled = true
    FlyApplyBtn.TextColor3 = Color3.fromRGB(255,255,255)
    FlyApplyBtn.BackgroundColor3 = Color3.fromRGB(50,50,150)
    local flyApplyCorner = Instance.new("UICorner", FlyApplyBtn)
    flyApplyCorner.CornerRadius = UDim.new(0,12)

    FlyApplyBtn.MouseButton1Click:Connect(function()
        local value = tonumber(FlySpeedInput.Text)
        if value and value > 0 then
            flySpeed = value
        end
    end)

    FlyToggleBtn.MouseButton1Click:Connect(function()
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if flyToggled then
            stopFly()
            flyToggled = false
            FlyToggleBtn.Text = "ON / OFF FLY"
            if hum then hum.WalkSpeed = userWalkSpeed end
        else
            startFly()
            flyToggled = true
            FlyToggleBtn.Text = "ON / OFF FLY (ON)"
            if hum then hum.WalkSpeed = 0 end
        end
    end)

    -- === SpeedFrame Buttons ===
    local SpeedToggleBtn = Instance.new("TextButton", SpeedFrame)
    SpeedToggleBtn.Size = UDim2.new(0.85,0,0,50)
    SpeedToggleBtn.Position = UDim2.new(0.5,-100,0,60)
    SpeedToggleBtn.Text = "ON / OFF SPEED"
    SpeedToggleBtn.Font = Enum.Font.GothamBold
    SpeedToggleBtn.TextScaled = true
    SpeedToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
    SpeedToggleBtn.BackgroundColor3 = Color3.fromRGB(50,50,150)
    local speedToggleCorner = Instance.new("UICorner", SpeedToggleBtn)
    speedToggleCorner.CornerRadius = UDim.new(0,12)

    local WalkSpeedInput = Instance.new("TextBox", SpeedFrame)
    WalkSpeedInput.Size = UDim2.new(0.85,0,0,50)
    WalkSpeedInput.Position = UDim2.new(0.5,-100,0,130)
    WalkSpeedInput.PlaceholderText = "Masukkan WalkSpeed"
    WalkSpeedInput.Text = tostring(userWalkSpeed)
    WalkSpeedInput.TextScaled = true
    WalkSpeedInput.ClearTextOnFocus = false
    WalkSpeedInput.BackgroundColor3 = Color3.fromRGB(220,220,220)
    WalkSpeedInput.TextColor3 = Color3.fromRGB(0,0,0)
    local walkCorner = Instance.new("UICorner", WalkSpeedInput)
    walkCorner.CornerRadius = UDim.new(0,12)

    local WalkApplyBtn = Instance.new("TextButton", SpeedFrame)
    WalkApplyBtn.Size = UDim2.new(0.85,0,0,50)
    WalkApplyBtn.Position = UDim2.new(0.5,-100,0,200)
    WalkApplyBtn.Text = "APPLY WALK SPEED"
    WalkApplyBtn.Font = Enum.Font.GothamBold
    WalkApplyBtn.TextScaled = true
    WalkApplyBtn.TextColor3 = Color3.fromRGB(255,255,255)
    WalkApplyBtn.BackgroundColor3 = Color3.fromRGB(50,50,150)
    local walkApplyCorner = Instance.new("UICorner", WalkApplyBtn)
    walkApplyCorner.CornerRadius = UDim.new(0,12)

    WalkApplyBtn.MouseButton1Click:Connect(function()
        local value = tonumber(WalkSpeedInput.Text)
        if value and value > 0 then
            userWalkSpeed = value
            local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if hum and not flyToggled then hum.WalkSpeed = userWalkSpeed end
        end
    end)

    SpeedToggleBtn.MouseButton1Click:Connect(function()
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if speedToggled then
            speedToggled = false
            SpeedToggleBtn.Text = "ON / OFF SPEED"
            if hum and not flyToggled then hum.WalkSpeed = userWalkSpeed end
        else
            speedToggled = true
            SpeedToggleBtn.Text = "ON / OFF SPEED (ON)"
            if hum and not flyToggled then hum.WalkSpeed = userWalkSpeed end
        end
    end)

    -- Menu navigation
    FlyBtn.MouseButton1Click:Connect(function()
        MenuFrame.Visible = false
        FlyFrame.Visible = true
        BackBtn.Visible = true
    end)
    SpeedBtn.MouseButton1Click:Connect(function()
        MenuFrame.Visible = false
        SpeedFrame.Visible = true
        BackBtn.Visible = true
    end)
    CmdsBtn.MouseButton1Click:Connect(function()
        MenuFrame.Visible = false
        BackBtn.Visible = true
    end)

    BackBtn.MouseButton1Click:Connect(function()
        FlyFrame.Visible = false
        SpeedFrame.Visible = false
        MenuFrame.Visible = true
        BackBtn.Visible = false
    end)
end

createGui()