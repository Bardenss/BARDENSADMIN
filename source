--// Bardenss Fly GUI - Mobile Ready
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local flying = false
local flyConn
local bv, bg

local flySpeed = 50

-- UI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.ResetOnSpawn = false

-- animasi teks
local BardenssLabel = Instance.new("TextLabel", ScreenGui)
BardenssLabel.Size = UDim2.new(1,0,0.2,0)
BardenssLabel.Position = UDim2.new(0,0,0.4,0)
BardenssLabel.Text = "Bardenss"
BardenssLabel.TextScaled = true
BardenssLabel.Font = Enum.Font.Cartoon
BardenssLabel.TextColor3 = Color3.fromRGB(255,182,193) -- pink bubble
BardenssLabel.BackgroundTransparency = 1

task.delay(2, function()
	BardenssLabel:Destroy()
end)

-- main bar
local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0,200,0,100)
MainFrame.Position = UDim2.new(0,20,0,200)
MainFrame.BackgroundColor3 = Color3.fromRGB(255,228,225)
MainFrame.Visible = false

local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0,10)

local FlyBtn = Instance.new("TextButton", MainFrame)
FlyBtn.Size = UDim2.new(1,-20,0,40)
FlyBtn.Position = UDim2.new(0,10,0,30)
FlyBtn.Text = "Fly: OFF"
FlyBtn.Font = Enum.Font.Cartoon
FlyBtn.TextScaled = true
FlyBtn.BackgroundColor3 = Color3.fromRGB(255,192,203)

local UICorner2 = Instance.new("UICorner", FlyBtn)
UICorner2.CornerRadius = UDim.new(0,8)

-- minimize button
local MiniBtn = Instance.new("TextButton", ScreenGui)
MiniBtn.Size = UDim2.new(0,40,0,40)
MiniBtn.Position = UDim2.new(0,20,0,200)
MiniBtn.Text = "B"
MiniBtn.Font = Enum.Font.Cartoon
MiniBtn.TextScaled = true
MiniBtn.BackgroundColor3 = Color3.fromRGB(255,182,193)
MiniBtn.Visible = false
local UICorner3 = Instance.new("UICorner", MiniBtn)
UICorner3.CornerRadius = UDim.new(1,0)

-- fungsi fly
local function startFly()
	if flying then return end
	local char = LocalPlayer.Character
	local root = char and char:FindFirstChild("HumanoidRootPart")
	local hum = char and char:FindFirstChildOfClass("Humanoid")
	if not root or not hum then return end
	
	flying = true
	hum:ChangeState(Enum.HumanoidStateType.Physics)
	hum.PlatformStand = true
	
	bv = Instance.new("BodyVelocity")
	bv.MaxForce = Vector3.new(9e9,9e9,9e9)
	bv.Velocity = Vector3.new()
	bv.Parent = root
	
	bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(9e9,9e9,9e9)
	bg.P = 1000
	bg.D = 50
	bg.Parent = root
	
	flyConn = RunService.RenderStepped:Connect(function()
		if not flying or not root or not hum then return end
		local cam = workspace.CurrentCamera
		bg.CFrame = cam.CFrame
		
		local moveDir = hum.MoveDirection
		bv.Velocity = (cam.CFrame.LookVector * moveDir.Z + cam.CFrame.RightVector * moveDir.X) * flySpeed
	end)
end

local function stopFly()
	flying = false
	local char = LocalPlayer.Character
	local hum = char and char:FindFirstChildOfClass("Humanoid")
	if hum then
		hum.PlatformStand = false
		hum:ChangeState(Enum.HumanoidStateType.Running)
	end
	if bv then bv:Destroy() bv=nil end
	if bg then bg:Destroy() bg=nil end
	if flyConn then flyConn:Disconnect() flyConn=nil end
end

-- tombol fly
FlyBtn.MouseButton1Click:Connect(function()
	if flying then
		stopFly()
		FlyBtn.Text = "Fly: OFF"
	else
		startFly()
		FlyBtn.Text = "Fly: ON"
	end
end)

-- tombol minimize
MiniBtn.MouseButton1Click:Connect(function()
	MiniBtn.Visible = false
	MainFrame.Visible = true
end)

local function showMain()
	MainFrame.Visible = true
end

-- setelah animasi 2 detik -> show main
task.delay(2, function()
	showMain()
end)

-- minimize logic
MainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		MainFrame.Visible = false
		MiniBtn.Visible = true
	end
end)